################################################################################
# deploy.yml
# GitHub Actions Workflow for deploying immlib to PyPI.
# by Noah C. Benson

name: Deploy to PyPI

# We only run this manually.
on:
  workflow_dispatch:

# This just deploys the source distribution after running tests on ubuntu.
jobs:
  deploy-source:
    name: Source
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          - '3.11'
        os:
          - ubuntu-latest
        arch:
          - 'x64'
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      TWINE_DEST: pypi
    steps:
      # Check out the repository (goes to $GITHUB_WORKSPACE)
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '2'
      # Setup the Python Environment.
      - name: Setup Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.version }}
          architecture: ${{ matrix.arch }}
      - name: Setip Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.version }}
      - name: Install Numpy, Scipy, and PyTorch
        shell: bash -el {0}
        run: |
          echo " "
          echo -n "# CONDA ##############################"
          echo "##########################################"
          echo " "
          conda install \
              -cpytorch \
              -cconda-forge \
              'numpy >= 1.24' \
              'scipy >= 1.7' \
              'pytorch >= 2.2'

          echo " "
          echo -n "# BUILD/TWIND ########################"
          echo "##########################################"
          echo " "
          python -m pip install --upgrade --user build twine

          echo " "
          echo -n "# IMMLIB #############################"
          echo "##########################################"
          echo " "
          python -m pip install -e .[test]
      # Log the Python Version
      - name: Display Version Information
        shell: bash -el {0}
        run: |
          PYVER=$(python --version)
          TORCHVER=$(python -c 'import torch; print(torch.__version__)')
          NUMPYVER=$(python -c 'import numpy; print(numpy.__version__)')
          SCIPYVER=$(python -c 'import scipy; print(scipy.__version__)')
          IMMLIBVER=$(python -c 'import immlib; print(immlib.__version__)')
          echo "Versions:"
          echo "  - Python:  ${PYVER}"
          echo "  - PyTorch: ${TORCHVER}"
          echo "  - NumPy:   ${NUMPYVER}"
          echo "  - SciPy:   ${SCIPYVER}"
          echo "  - ImmLib:  ${IMMLIBVER}"
      # Make sure the tests pass before we upload anything.
      - name: Run Tests
        run: |
          python -m immlib.test
        shell: bash -el {0}
      # Go ahead and build and deploy.
      - name: Build and Upload Source Distribution
        run: |
          [ -d ./dist ] && rm ./dist/*
          python -m build
          python -m twine upload -r $TWINE_DEST dist/immlib-*.tar.gz
