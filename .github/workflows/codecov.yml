################################################################################
# codecov.yml
# GitHub Actions Workflow for generating the codecov reports on the tests for
# the immlib library.
# by Noah C. Benson

name: Codecov

# We run on either pushes or pulls into main or dev branches
on:
  push:
    branches: [ main, dev ]
    paths-ignore:
      - '**/README.md'
      - '**/.gitignore'
      - '.github/workflows/deploy.yml'
      - '.github/workflows/tests.yml'
  pull_request:
    branches: [ main, dev ]
    paths-ignore:
      - '**/README.md'
      - '**/.gitignore'
      - '.github/workflows/deploy.yml'
      - '.github/workflows/tests.yml'
  # We sometimes want to run this manually.
  workflow_dispatch:
  # We also sometimes want to run this from another workflow.
  workflow_call:

# Our only job in this case is to test the code.
jobs:
  codecov:
    name: "ubuntu-latest / x64 / Python 3.11"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '3.11'
        os:
          - ubuntu-latest
        arch:
          - 'x64'
    # The job environment.
    env:
      OS: ${{ matrix.os }}
      ARCH: ${{ matrix.arch }}
      PYTHON: ${{ matrix.version }}
    # The steps in the job.
    steps:
      # Check out the repository (goes to $GITHUB_WORKSPACE)
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '2'
      # Setup the Python Environment.
      - name: Setup Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.version }}
          architecture: ${{ matrix.arch }}
      - name: Setip Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.version }}
      - name: Install Numpy, Scipy, and PyTorch
        shell: bash -el {0}
        run: |
          conda install \
              -cpytorch \
              -cconda-forge \
              'numpy >= 1.24' \
              'scipy >= 1.7' \
              'pytorch >= 2.2' \
              coverage
      # Log the Python Version
      - name: Display Python version
        shell: bash -el {0}
        run: |
          PYVER=$(python --version)
          TORCHVER=$(python -c 'import torch; print(torch.__version__)')
          NUMPYVER=$(python -c 'import numpy; print(numpy.__version__)')
          SCIPYVER=$(python -c 'import scipy; print(scipy.__version__)')
          echo "Versions:"
          echo "  - Python:  ${PYVER}"
          echo "  - PyTorch: ${TORCHVER}"
          echo "  - NumPy:   ${NUMPYVER}"
          echo "  - SciPy:   ${SCIPYVER}"
      # Run the actual tests.
      - name: Generate Test Codecov Reports
        run: |
          pip install -e .[test]
          # If we're on ubuntu and running python 3.11, we do the code coverage
          # reports along with the tests; otherwise we just do normal tests.
          conda install -cconda-forge coverage
          coverage run -m immlib.test
          coverage xml -o coverage-report.xml
          coverage report
        shell: bash -el {0}
        id: runtests
      - name: Process Code Coverage
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          file: 'coverage-report.xml'
          fail_ci_if_error: true
